
CCEffect %{
techniques: 
  - passes: 
      - vert: vs
        frag: fs
        blendState: 
          targets: 
            - blend: true
        rasterizerState: 
          cullMode: none
        properties: 
          texture: 
            value: white
          uPos: 
            value: 
              - 0.7
              - 0.5
          uRadius: 
            value: 0.5
}%
        
CCProgram vs %{
    precision highp float;
    #include <cc-global>
    #include <cc-local>

    in vec3 a_position;
    #if USE_TEXTURE
        in vec2 a_uv0;
        out vec2 v_uv0;
    #endif  
    in vec4 a_color;
    out vec4 v_color;

    void main () {
        mat4 mvp;
        #if CC_USE_MODEL
            mvp = cc_matViewProj * cc_matWorld;
        #else
            mvp = cc_matViewProj;
        #endif

        #if USE_TEXTURE
            v_uv0 = a_uv0;
        #endif

        #if USE_TINT
            // clear warning for spine
        #endif

        v_color = a_color;
        gl_Position = mvp * vec4(a_position, 1);
    }
}%
        
CCProgram fs %{
    precision highp float;
    #include <cc-global>
    #if USE_TEXTURE
        in vec2 v_uv0;
        uniform sampler2D texture;
    #endif
    in vec4 v_color;
    uniform Constant {
		vec2 uPos;
		float uRadius;
	};
	uniform sampler2D uTex;

    vec4 DimLight_main(sampler2D Tex, vec2 UV, vec2 Pos, float Radius) 
	{
		vec2 uv = UV;
	    vec4 col = texture2D(Tex, uv);
	    float dist = distance(uv, Pos) / Radius;
	    col.r -= dist;
	   	col.g -= dist;
	    col.b -= dist;
	    return col;
	}
	void main () {
	    gl_FragColor = DimLight_main(texture, v_uv0, uPos, uRadius);
	} 
	
}%
        