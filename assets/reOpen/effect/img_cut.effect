// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        size : { value : [0,0] }
        cutType: { value: 0.5}
        cutRadio: { value: 0.5}
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
    in vec2 v_uv0;
    uniform sampler2D texture;
  #endif

  #if  USE_CUT
    uniform block{
      vec2 size;
      float cutType;
      float cutRadio;
    };
  #endif

  float getDis(vec2 uv,vec2 point){
    float radio = size.y/size.x;
    float doubleDis;
    if(radio > 1.0){
      doubleDis = (uv.x - point.x )*(uv.x - point.x )+(uv.y - point.y )*(uv.y - point.y )*radio*radio;
    }else{
      doubleDis = (uv.x - point.x )*(uv.x - point.x )/(radio*radio)+(uv.y - point.y )*(uv.y - point.y );
    }

    float radius = sqrt(doubleDis);
    float dis = smoothstep(cutRadio -.005,cutRadio,radius);
    return dis;
  }

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
      CCTexture(texture, v_uv0, o);
      #if  USE_CUT
        if(cutType <1.0){
          // o.a = 0.5;
          //圆形遮罩

          // float dis =  distance(v_uv0,vec2(0.5,0.5));
          float dis = getDis(v_uv0,vec2(0.5,0.5));
          if(dis>cutRadio){
            discard;
          }


        }else if(cutType<2.0){
          o.a = 0.1;
        }
      #endif
    #endif



    o *= v_color;

    ALPHA_TEST(o);

    #if USE_BGRA
      gl_FragColor = o.bgra;
    #else
      gl_FragColor = o.rgba;
    #endif
  }
}%
