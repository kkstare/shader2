[1,0,0,[["cc.JsonAsset",["_name","json"],1]],[[0,0,1,3]],[[0,"UVAnimation",{"name":"UVAnimation","category":"UVAnimation","version":"1.0","author":"SuperSuRaccoon","info":"UVAnimation.","description":"UVAnimation.","refs":[],"tags":["UV_RELATED"],"input":[{"type":"vec2","name":"uv","info":"uv"},{"type":"sampler2D","name":"tex","info":"vec3 to split"}],"output":[{"type":"vec4","name":"rgba","info":"rgba"}],"uniforms":{"frames_x":{"type":"float","min":0,"max":10,"default":8},"frames_y":{"type":"float","min":0,"max":10,"default":4},"speed":{"type":"float","min":0,"max":60,"default":30},"texture":{"type":"sampler2D"}},"frags":{},"main":["vec4 main(vec2 uv, sampler2D tex) {","    vec2 framesCount = vec2(frames_x, frames_y);","    vec2 oneFrameOffset = vec2(1.0 / framesCount.x, 1.0 / framesCount.y);","    vec2 renderFrame = vec2(int(mod(CC_Time[1] * speed, framesCount.x)), int(mod(CC_Time[1] * speed, framesCount.y)));","    vec2 newUV = vec2(0.0, 0.0);","    newUV.x = (uv.x / framesCount.x) + oneFrameOffset.x * renderFrame.x;","    newUV.y = (uv.y / framesCount.y) + oneFrameOffset.y * renderFrame.y;","    return texture2D(tex, newUV);","}"]}]],0,0,[],[],[]]