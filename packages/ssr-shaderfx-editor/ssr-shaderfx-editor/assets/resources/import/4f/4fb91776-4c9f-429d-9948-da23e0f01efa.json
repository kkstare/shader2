[1,0,0,[["cc.JsonAsset",["_name","json"],1]],[[0,0,1,3]],[[0,"NoiseVoronoi",{"name":"NoiseVoronoi","name_zh":"多边形噪声","version":"1.0","description":{"en":"Generates a Voronoi noise based on input UV.","zh":"使用输入的纹理坐标，生成多边形噪声。"},"tags":["Core","Noise","Random","Generator","Voronoi"],"input":[{"type":"vec2","name":"UV","info":{"en":"UV input value","zh":"UV 输入值"}},{"type":"float","name":"AngleOffset","info":{"en":"Offset value for points","zh":"角度偏移值"}},{"type":"float","name":"CellDensity","info":{"en":"Density of cells generated","zh":"单元密度"}}],"output":[{"type":"float","name":"Output"}],"uniforms":{},"frags":{"f_voronoi_noise_random_vector":["vec2 f_voronoi_noise_random_vector (vec2 UV, float offset) {","    mat2 m = mat2(15.27, 47.63, 99.41, 89.98);","    vec2 c = UV * m;","    UV.x = fract(sin(c.x) * 46839.32);","    UV.y = fract(sin(c.y) * 46839.32);","    return vec2(sin(UV.y * offset) * 0.5 + 0.5, cos(UV.x * offset) * 0.5 + 0.5);","}"]},"main":["float main(vec2 uv, float AngleOffset, float CellDensity) {","   float Out = 0.0;","   vec2 g = floor(uv * CellDensity);","   vec2 f = fract(uv * CellDensity);","   float t = 8.0;","   vec3 res = vec3(8.0, 0.0, 0.0);","   for(int y = -1; y <= 1; y ++)","   {","       for(int x =- 1; x <= 1; x ++)","       {","           vec2 lattice = vec2(x, y);","           vec2 offset = f_voronoi_noise_random_vector(lattice + g, AngleOffset);","           float d = distance(lattice + offset, f);","           if(d < res.x)","           {","               res = vec3(d, offset.x, offset.y);","               Out = res.x;","           }","       }","   }","   return Out;","}"]}]],0,0,[],[],[]]